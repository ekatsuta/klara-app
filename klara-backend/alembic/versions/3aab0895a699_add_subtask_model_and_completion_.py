"""Add subtask model and completion tracking

Revision ID: 3aab0895a699
Revises: 57fe7a40e8b6
Create Date: 2025-10-16 12:46:35.021243

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "3aab0895a699"
down_revision: Union[str, Sequence[str], None] = "57fe7a40e8b6"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "subtasks",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("parent_task_id", sa.Integer(), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("order", sa.Integer(), nullable=False),
        sa.Column("estimated_time_minutes", sa.Integer(), nullable=True),
        sa.Column("due_date", sa.Date(), nullable=True),
        sa.Column("completed", sa.Boolean(), server_default="false", nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["parent_task_id"], ["tasks.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column(
        "shopping_items",
        sa.Column("completed", sa.Boolean(), server_default="false", nullable=False),
    )
    op.add_column(
        "tasks", sa.Column("estimated_time_minutes", sa.Integer(), nullable=True)
    )
    op.add_column(
        "tasks",
        sa.Column("completed", sa.Boolean(), server_default="false", nullable=False),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("tasks", "completed")
    op.drop_column("tasks", "estimated_time_minutes")
    op.drop_column("shopping_items", "completed")
    op.drop_table("subtasks")
    # ### end Alembic commands ###
